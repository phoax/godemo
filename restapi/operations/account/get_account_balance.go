// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetAccountBalanceHandlerFunc turns a function with the right signature into a get account balance handler
type GetAccountBalanceHandlerFunc func(GetAccountBalanceParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAccountBalanceHandlerFunc) Handle(params GetAccountBalanceParams) middleware.Responder {
	return fn(params)
}

// GetAccountBalanceHandler interface for that can handle valid get account balance params
type GetAccountBalanceHandler interface {
	Handle(GetAccountBalanceParams) middleware.Responder
}

// NewGetAccountBalance creates a new http.Handler for the get account balance operation
func NewGetAccountBalance(ctx *middleware.Context, handler GetAccountBalanceHandler) *GetAccountBalance {
	return &GetAccountBalance{Context: ctx, Handler: handler}
}

/*GetAccountBalance swagger:route GET /account/balance/{address} Account getAccountBalance

Get account balance

<b>Get account balance</b>

*/
type GetAccountBalance struct {
	Context *middleware.Context
	Handler GetAccountBalanceHandler
}

func (o *GetAccountBalance) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetAccountBalanceParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
